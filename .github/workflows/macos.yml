name: macOS - Ngrok

on: workflow_dispatch

env:
  NGROK_AUTH_TOKEN: ${{ secrets.NGROK_AUTH_TOKEN }}
  RDP_USER: admin
  RDP_PASS: p@ssw0rd!

defaults:
  run:
    shell: bash

jobs:
  ngrok-rdp:
    runs-on: macos-15
    timeout-minutes: 360
    steps:
      - name: Setup macOS Remote Desktop
        run: |
          echo "‚ñ∂Ô∏è Disabling Spotlight indexing..."
          sudo mdutil -i off -a

          echo "üë§ Creating user: $RDP_USER"
          sudo dscl . -create /Users/$RDP_USER
          sudo dscl . -create /Users/$RDP_USER UserShell /bin/bash
          sudo dscl . -create /Users/$RDP_USER RealName "Lazuee"
          sudo dscl . -create /Users/$RDP_USER UniqueID 1001
          sudo dscl . -create /Users/$RDP_USER PrimaryGroupID 80
          sudo dscl . -create /Users/$RDP_USER NFSHomeDirectory /Users/$RDP_USER
          sudo dscl . -passwd /Users/$RDP_USER "$RDP_PASS"
          sudo createhomedir -c -u $RDP_USER > /dev/null

          echo "üñ•Ô∏è Enabling GUI session and auto-login..."
          sudo defaults write /Library/Preferences/com.apple.loginwindow autoLoginUser "$RDP_USER"
          sudo launchctl asuser $(id -u "$RDP_USER") sudo -u "$RDP_USER" open -a Finder
          sudo launchctl load -w /System/Library/LaunchAgents/com.apple.Dock.plist || true

          echo "üì° Enabling Remote Management..."
          sudo /System/Library/CoreServices/RemoteManagement/ARDAgent.app/Contents/Resources/kickstart \
            -configure -allowAccessFor -allUsers -privs -all
          sudo /System/Library/CoreServices/RemoteManagement/ARDAgent.app/Contents/Resources/kickstart \
            -configure -clientopts -setvnclegacy -vnclegacy yes

          echo "üîê Setting VNC password..."
          echo "$RDP_PASS" | perl -we '
            BEGIN { @k = unpack "C*", pack "H*", "1734516E8BA8C5E2FF1C39567390ADCA" };
            $_ = <>; chomp; s/^(.{8}).*/$1/;
            @p = unpack "C*", $_;
            foreach (@k) { printf "%02X", $_ ^ (shift @p || 0) };
            print "\n"
          ' | sudo tee /Library/Preferences/com.apple.VNCSettings.txt > /dev/null

          echo "üöÄ Restarting ARD agent..."
          sudo /System/Library/CoreServices/RemoteManagement/ARDAgent.app/Contents/Resources/kickstart \
            -restart -agent -console
          sudo /System/Library/CoreServices/RemoteManagement/ARDAgent.app/Contents/Resources/kickstart \
            -activate

          echo "üéõ Optimizing system settings..."
          defaults write com.apple.Accessibility ReduceMotionEnabled -int 1
          defaults write com.apple.universalaccess reduceMotion -int 1
          defaults write com.apple.universalaccess reduceTransparency -int 1
          sudo nvram boot-args="serverperfmode=1 $(nvram boot-args 2>/dev/null | cut -f 2-)"

          sudo /usr/bin/defaults write .GlobalPreferences MultipleSessionsEnabled -bool TRUE
          defaults write "Apple Global Domain" MultipleSessionsEnabled -bool true

          echo "üîì Disabling screen lock..."
          defaults write com.apple.loginwindow DisableScreenLock -bool true
          defaults write com.apple.loginwindow AllowList -string '*'

          cd /Users/$RDP_USER || cd ~

      - name: Install and Configure Ngrok
        run: |
          brew install --cask ngrok
          ngrok config add-authtoken "$NGROK_AUTH_TOKEN"

      - name: Start Ngrok Tunnel
        run: |
          echo "üåÄ Starting ngrok tunnel..."
          ngrok tcp 5900 --log=stdout > ngrok.log &

          echo "‚è≥ Waiting for Ngrok to initialize..."
          sleep 10

          max_attempts=10
          attempt=1
          tunnel_url=""

          while [[ -z "$tunnel_url" && $attempt -le $max_attempts ]]; do
            echo "Attempt $attempt: Checking tunnel..."
            tunnel_url=$(curl -s http://localhost:4040/api/tunnels | jq -r '.tunnels[]? | select(.proto=="tcp") | .public_url')
            if [[ -z "$tunnel_url" ]]; then
              sleep 5
              ((attempt++))
            fi
          done

          if [[ -z "$tunnel_url" ]]; then
            echo "‚ùå Failed to retrieve Ngrok URL after $max_attempts attempts."
            exit 1
          fi

          tunnel_url=${tunnel_url#tcp://}
          host=${tunnel_url%:*}
          port=${tunnel_url##*:}

          echo "‚úÖ RDP/VNC Tunnel Established!"
          echo "üîó Connect to: $host:$port"
          echo "üë§ Username: $RDP_USER"
          echo "üîí Password: $RDP_PASS"

      - name: Keep Alive (6 hours)
        run: |
          echo "Keeping runner alive for 6 hours..."
          for i in {1..72}; do
            echo "Still alive... ($i)"
            sleep 300
          done

      - name: Cleanup Ngrok
        if: always()
        run: |
          pkill ngrok || true
          echo "Ngrok process cleaned up."
