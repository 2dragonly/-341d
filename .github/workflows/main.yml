name: Windows - Ngrok

on: workflow_dispatch

env:
  NGROK_AUTH_TOKEN: ${{ secrets.NGROK_AUTH_TOKEN }}
  RDP_USER: runneradmin
  RDP_PASS: p@ssw0rd!

jobs:
  ngrok-rdp:
    runs-on: windows-latest
    timeout-minutes: 9999

    steps:
    - name: Setup Windows Remote Desktop
      run: |
        Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server' -Name "fDenyTSConnections" -Value 0
        Enable-NetFirewallRule -DisplayGroup "Remote Desktop"
        Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp' -Name "UserAuthentication" -Value 1
        Set-LocalUser -Name "$env:RDP_USER" -Password (ConvertTo-SecureString -AsPlainText "$env:RDP_PASS" -Force)
        
        Get-ChildItem -Path ([System.Environment]::GetFolderPath('Desktop')) -Filter '*.lnk' | Remove-Item -Force
        (New-Object -ComObject "Shell.Application").minimizeall()
        
    - name: Install and Configure Ngrok
      run: |
        Invoke-WebRequest https://bin.equinox.io/c/bNyj1mQVY4c/ngrok-v3-stable-windows-amd64.zip -OutFile ngrok.zip
        Expand-Archive ngrok.zip -DestinationPath .\ngrok
        .\ngrok\ngrok.exe authtoken $env:NGROK_AUTH_TOKEN

    - name: Start Ngrok Tunnel
      run: Start-Process -FilePath ".\ngrok\ngrok.exe" -ArgumentList "tcp 3389 --cidr-allow 0.0.0.0/32" -WindowStyle Hidden

    - name: Retrieve Ngrok URL
      run: |
        $attempts = 0
        $maxAttempts = 10
        $ngrokUrl = $null

        while (-not $ngrokUrl -and $attempts -lt $maxAttempts) {
          Start-Sleep -Seconds 5
          $attempts++
          
          try {
            $tunnels = Invoke-RestMethod -Uri http://localhost:4040/api/tunnels
            $ngrokUrl = ($tunnels.tunnels | Where-Object { $_.proto -eq 'tcp' }).public_url
          } catch {
            Write-Host "Attempt $attempts : Waiting for Ngrok to start..."
          }
        }

        if (-not $ngrokUrl) {
          throw "Failed to retrieve Ngrok URL after $maxAttempts attempts."
        }

        $ngrokUrl = $ngrokUrl -replace '^tcp://', ''
        
        Write-Host "RDP Connection Details"
        Write-Host "URL: $ngrokUrl"
        Write-Host "Username: $env:RDP_USER"
        Write-Host "Password: $env:RDP_PASS"

    - name: Keep Alive
      run: |
        $duration = 21600  # 6 hours in seconds
        $interval = 300    # Check every 5 minutes
        $endTime = (Get-Date).AddSeconds($duration)

        while ((Get-Date) -lt $endTime) {
          $ngrokProcess = Get-Process -Name "ngrok" -ErrorAction SilentlyContinue
          if (-not $ngrokProcess) {
            Write-Host "Ngrok process not found. Exiting workflow."
            exit 1
          }

          Start-Sleep -Seconds $interval
        }

    - name: Cleanup
      if: always()
      run: |
        $ngrokProcess = Get-Process -Name "ngrok" -ErrorAction SilentlyContinue
        if ($ngrokProcess) {
          Write-Host "Terminating Ngrok process..."
          $ngrokProcess | Stop-Process -Force
        }
        
        Write-Host "Cleanup complete."
